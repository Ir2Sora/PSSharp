@using PSSharp.Models
@model PSSharp.Models.Suggestion

@{
    ViewBag.Title = "Управление инициативой";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Управление инициативой</h2>

<script>
    $(document).ready(function () {
        $('#DateOfConsideration').datepicker({ dateFormat: "yy.mm.dd" });
        $("#mainForm").validate();
    });
</script>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "mainForm" }))
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Suggestion</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.SuggestionId)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.SuggestionId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.User)
        </div>
        <div class="editor-field">
            @Model.User.View()
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.Status)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Problem)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Problem, new { @class = "required" }) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Solution)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Solution, new { @class = "required" }) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Result)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Result, new { @class = "required" }) 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateOfReceipt)
        </div>
        <div class="editor-field">
            @Model.DateOfReceiptView()
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateOfConsideration)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.DateOfConsideration, new { @class = "date", @Value = string.Format("{0:yyyy/MM/dd}", Model.DateOfConsideration) })
        </div>

        @Html.HiddenFor(model => model.SuggestionId)
        @Html.HiddenFor(model => model.DateOfReceipt)
        @Html.HiddenFor(model => model.UserId)

        <p>
            <input type="submit" value="Сохранить" />
        </p>

    </fieldset>
}

<div style="background-color: #d3d3d3">

    <h2>Направления</h2>
    @if (Model.Directions.Count != 0)
    {
        <table style="border: solid black 1px">
            <tr>
                <th style="border: solid black 1px">Номер отдела
                </th>
                <th style="border: solid black 1px">Статус
                </th>
                <th style="border: solid black 1px">Одобрено
                </th>
                <th style="border: solid black 1px">Отклонено
                </th>
                <th style="border: solid black 1px"></th>
            </tr>

            @foreach (var item in Model.Directions)
            {
                <tr>
                    <td style="border: solid black 1px">
                        @Html.DisplayFor(modelItem => item.DepartmentId)
                    </td>
                    <td style="border: solid black 1px">
                        @EnumExtension.GetDescription(item.Status)
                    </td>
                    <td style="border: solid black 1px">
                        @item.Approved()
                    </td>
                    <td style="border: solid black 1px">
                        @item.Rejected()
                    </td>
                    <td style="border: solid black 1px">
                        @Html.ActionLink("Просмотр", "ViewDirection", new { id = item.DirectionId })
                    </td>
                </tr>
            }

        </table>
    }


    @using (Html.BeginForm("addDirection", "Ci"))
    {
    
        <p>
            <input type="submit" value="Добавить направление" />
        </p>
    
        @Html.ValidationSummary(true)
        {
            if (Model.SuggestionId != null)
            {
                var direction = new Direction();

                <div class="editor-label">
                    @Html.LabelFor(m => direction.DepartmentId)
                </div>
                <div class="editor-field">
                    @Html.DropDownList("DepartmentId", (IEnumerable<SelectListItem>)ViewData["Departments"])
                    @Html.ValidationMessageFor(m => direction.DepartmentId)
                </div>
            }
        }
    
        @Html.HiddenFor(model => model.SuggestionId)
    }
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
